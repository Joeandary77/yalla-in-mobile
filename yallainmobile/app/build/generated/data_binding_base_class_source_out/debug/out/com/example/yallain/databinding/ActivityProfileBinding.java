// Generated by view binder compiler. Do not edit!
package com.example.yallain.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.yallain.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton homeButton;

  @NonNull
  public final Button logoutButton;

  @NonNull
  public final ImageView profilePicture;

  @NonNull
  public final Button rateUsButton;

  @NonNull
  public final ImageButton settingsButton;

  @NonNull
  public final TextView usernameTextView;

  @NonNull
  public final Button viewHistoryButton;

  private ActivityProfileBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton homeButton,
      @NonNull Button logoutButton, @NonNull ImageView profilePicture, @NonNull Button rateUsButton,
      @NonNull ImageButton settingsButton, @NonNull TextView usernameTextView,
      @NonNull Button viewHistoryButton) {
    this.rootView = rootView;
    this.homeButton = homeButton;
    this.logoutButton = logoutButton;
    this.profilePicture = profilePicture;
    this.rateUsButton = rateUsButton;
    this.settingsButton = settingsButton;
    this.usernameTextView = usernameTextView;
    this.viewHistoryButton = viewHistoryButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.homeButton;
      ImageButton homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.profilePicture;
      ImageView profilePicture = ViewBindings.findChildViewById(rootView, id);
      if (profilePicture == null) {
        break missingId;
      }

      id = R.id.rateUsButton;
      Button rateUsButton = ViewBindings.findChildViewById(rootView, id);
      if (rateUsButton == null) {
        break missingId;
      }

      id = R.id.settingsButton;
      ImageButton settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.usernameTextView;
      TextView usernameTextView = ViewBindings.findChildViewById(rootView, id);
      if (usernameTextView == null) {
        break missingId;
      }

      id = R.id.viewHistoryButton;
      Button viewHistoryButton = ViewBindings.findChildViewById(rootView, id);
      if (viewHistoryButton == null) {
        break missingId;
      }

      return new ActivityProfileBinding((RelativeLayout) rootView, homeButton, logoutButton,
          profilePicture, rateUsButton, settingsButton, usernameTextView, viewHistoryButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
